name: Java CI - simple test workflow

on:
  pull_request:
    branches:
      - 'master'
  push:
    branches:
      - 'master'

jobs:
  build_and_test:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - name: Cache
        uses: actions/cache@v1.1.0
        with:
          # A directory to store and save the cache
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Test and build maven jar file
        run: mvn -B clean compile package verify sonar:sonar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1.7
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          files: ./target/surefire-reports/**/*.xml

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set docker tag
        run: |
          if [[ ${{ github.ref }} == 'refs/heads/master' ]]; then
              echo "TAG=${{ secrets.DOCKER_HUB_USERNAME }}/itera-assignment:latest,${{ secrets.DOCKER_HUB_USERNAME }}/gams:$(git rev-parse --short HEAD)" >> "$GITHUB_ENV"
          else
              echo "TAG=${{ secrets.DOCKER_HUB_USERNAME }}/itera-assignment:test-deploy" >> "$GITHUB_ENV"
          fi
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ env.TAG }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
